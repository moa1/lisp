(load "~/quicklisp/setup.lisp")
(ql:quickload 'ieee-floats)
(use-package 'ieee-floats)

(defun read-float32-file (filename)
  (with-open-file (stream filename :element-type '(integer 0 #.(1- (ash 1 32))))
    (let* ((l (file-length stream))
	   (f (make-array l :element-type 'float :initial-element 0.0)))
      (dotimes (i l)
	(setf (aref f i) (decode-float32 (read-byte stream))))
      f)))

(defun samplestofreq (samples samplerate &key (offset 0))
  (let ((i-min nil)
	(i-max nil)
	(a-min nil)
	(a-max nil)
	(max-noise-ampl 0.013549805)
	(dir nil))
    (setf dir (if (> (aref samples 1) (aref samples 0)) '+ '-))
    (loop for i from 2 below (length samples) do
	 (let ((last (aref samples (1- i)))
	       (a (aref samples i)))
	   ;;(print (list "dir" dir "last" last "a" a))
	   (labels ((emitfreq (i-last-minmax a-last-minmax)
		      (let* ((half-wave (- (1- i) i-last-minmax))
			     (freq (float (/ samplerate (* 2 half-wave))))
			     (ampl (abs (- a-last-minmax last))))
			(if (> ampl max-noise-ampl)
			    (print (list "i" (+ offset (1- i)) "freq" freq "ampl" ampl))
			    nil)))
		    (watch-minmax ()
		      (if (> a last)
			  (when (eq dir '-)
			    (when (or (not i-max) (emitfreq i-max a-max))
			      (setf dir '+)
			      (setf i-min (1- i))
			      (setf a-min last)))
			  (when (eq dir '+)
			    (when (or (not i-min) (emitfreq i-min a-min))
			      (setf dir '-)
			      (setf i-max (1- i))
			      (setf a-max last))))))
	     (watch-minmax))))))

(defun samplestofreq-range (samples samplerate range-start range-stop)
  (when (null range-stop)
    (setf range-stop (length samples)))
  (let* ((l (- range-stop range-start))
	 (samples-range (make-array l :displaced-to samples :displaced-index-offset range-start)))
    (samplestofreq samples-range samplerate :offset range-start)))

(defparameter *a* (read-float32-file "~/mic2midi/whistle1_48kHz_32bit_float.raw"))

;; before using the signal, it should be filtered through a band-pass filter (see Wikipedia articles "Low-pass filter", "High-pass filter", "Band-pass filter".

;; "first note"
;;(samplestofreq-range *a* 48000 0 37000)
;; "deepest note"
;;(samplestofreq-range *a* 48000 355000 nil)
